{"entries":[{"timestamp":1754834958935,"editorVersion":"8.0.15","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":35454,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":2020,"diffs":[[1,"\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":108,"length1":208,"diffs":[[1,"        \"microphone\": \"*\"\n"]]},{"start1":198,"length1":39,"diffs":[[1,"        \"README.md\"\n"]]},{"start1":225,"length1":79,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.py","value":"C = 0\nB = 0\niBIT.setADC_Address(adcAddress.IBIT_V2)\nOLED.init(128, 64)\nR = 830\nL = 700\nmaxrefR = -1\nminrefR = 10000000\nmaxrefL = -1\nminrefL = 10000000\n\ndef on_forever():\n    global B, C\n    if B == 0:\n        basic.pause(400)\n        B += 1\n    basic.pause(10400)\n    if C == 0:\n        C += 1\n        basic.pause(1000)\n        C += 1\nbasic.forever(on_forever)\n\ndef on_forever2():\n    global maxrefR, minrefR, maxrefL, minrefL\n    basic.show_number(C)\n    maxrefR = max(iBIT.read_adc(ibitReadADC.ADC0), maxrefR)\n    minrefR = min(iBIT.read_adc(ibitReadADC.ADC0), minrefR)\n    maxrefL = max(iBIT.read_adc(ibitReadADC.ADC1), maxrefL)\n    minrefL = min(iBIT.read_adc(ibitReadADC.ADC1), minrefL)\nbasic.forever(on_forever2)\n\ndef on_forever3():\n    global R, L, maxrefR, minrefR, maxrefL, minrefL\n    if B != 0 and minrefR <= R and minrefL <= L:\n        R = (maxrefR * 1.5 + minrefR) / 2\n        L = (maxrefL * 1.5 + minrefL) / 2\n        maxrefR = -1\n        minrefR = 10000000\n        maxrefL = -1\n        minrefL = 10000000\n        basic.pause(2000)\nbasic.forever(on_forever3)\n\ndef on_forever4():\n    if iBIT.read_adc(ibitReadADC.ADC0) >= R and iBIT.read_adc(ibitReadADC.ADC1) >= L and (B == 0 or C == 1):\n        iBIT.motor(ibitMotor.FORWARD, 100)\n    elif iBIT.read_adc(ibitReadADC.ADC0) >= R and iBIT.read_adc(ibitReadADC.ADC1) >= L and (C == 0 or C == 2):\n        iBIT.motor(ibitMotor.FORWARD, 53)\n    elif iBIT.read_adc(ibitReadADC.ADC0) < R and iBIT.read_adc(ibitReadADC.ADC1) < L:\n        iBIT.spin(ibitSpin.RIGHT, 100)\n    elif iBIT.read_adc(ibitReadADC.ADC0) < R and iBIT.read_adc(ibitReadADC.ADC1) >= L and (C == 0 or C == 1):\n        iBIT.turn(ibitTurn.LEFT, 70)\n    elif iBIT.read_adc(ibitReadADC.ADC0) >= R and iBIT.read_adc(ibitReadADC.ADC1) < L and (C == 0 or C == 1):\n        iBIT.turn(ibitTurn.RIGHT, 70)\n    elif iBIT.read_adc(ibitReadADC.ADC0) < R and iBIT.read_adc(ibitReadADC.ADC1) >= L and C == 2:\n        iBIT.spin(ibitSpin.LEFT, 100)\n    elif iBIT.read_adc(ibitReadADC.ADC0) >= R and iBIT.read_adc(ibitReadADC.ADC1) < L and C == 2:\n        iBIT.spin(ibitSpin.RIGHT, 100)\nbasic.forever(on_forever4)\n"}]}],"snapshots":[{"timestamp":1754834958934,"editorVersion":"8.0.15","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"aa\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1754835384395}